USE KAILUA
GO


CREATE TRIGGER DUPLICAR_K_NAVEGACION
ON K_NAVEGACION
AFTER INSERT
AS BEGIN

	INSERT INTO KAILUAHOUSE.DBO.K_NAVEGACION_DUPLICADO
		(Miembro, IP, Pagina, Navegador, Metodo, FHVisita)		
		SELECT Miembro, IP, Pagina, Navegador, Metodo, FHVisita 
		FROM INSERTED

END
GO

CREATE TRIGGER IDENTIFICAR_NAVEGANTES_DUPLICADOS
ON K_NAVEGACION
AFTER UPDATE
AS BEGIN

	DECLARE @tablaips TABLE (ip VARCHAR(20))
	DECLARE @ipactual VARCHAR(20)
	
	INSERT INTO @tablaips
		SELECT IP FROM INSERTED

	DECLARE IPsNavDups CURSOR FOR
		SELECT ip FROM @tablaips
		
	OPEN IPsNavDups
	
	FETCH NEXT FROM IPsNavDups 
	INTO @ipactual
	
	WHILE (@@FETCH_STATUS = 0)
	BEGIN

		IF EXISTS(SELECT 1 FROM K_CLIENTES_LOGEADOS CL 
					JOIN K_NAVEGACION NAV ON CL.IP = NAV.IP)
		BEGIN

			UPDATE KAILUAHOUSE.DBO.K_NAVEGACION_DUPLICADO 
			SET Miembro = 
				(SELECT TOP 1 Nick 
				 FROM K_CLIENTES_LOGEADOS CL
					  JOIN K_NAVEGACION NAV ON CL.IP = NAV.IP)	
			  WHERE IP = @ipactual
			    AND Miembro = '?'
			  					  
		END

		IF EXISTS(SELECT 1 FROM K_PROGRAMADORES_LOGEADOS PL 
					JOIN K_NAVEGACION NAV ON PL.IP = NAV.IP)
		BEGIN

			UPDATE KAILUAHOUSE.DBO.K_NAVEGACION_DUPLICADO 
			SET Miembro = 
				(SELECT TOP 1 Nick 
				 FROM K_PROGRAMADORES_LOGEADOS PL
					  JOIN K_NAVEGACION NAV ON PL.IP = NAV.IP)	
			  WHERE IP = @ipactual			  			
			    AND Miembro = '?'			  

		END

		
		FETCH NEXT FROM IPsNavDups 
		INTO @ipactual
	
	END
	
	CLOSE IPsNavDups
	DEALLOCATE IPsNavDups

END
GO

CREATE TRIGGER IDENTIFICAR_NAVEGANTES
ON K_NAVEGACION
AFTER INSERT
AS BEGIN

	DECLARE @tablaips TABLE (ip VARCHAR(20))
	DECLARE @ipactual VARCHAR(20)
	
	INSERT INTO @tablaips
		SELECT IP FROM INSERTED

	DECLARE IPs CURSOR FOR
		SELECT ip FROM @tablaips
		
	OPEN IPs
	
	FETCH NEXT FROM IPs 
	INTO @ipactual
	
	WHILE (@@FETCH_STATUS = 0)
	BEGIN

		IF EXISTS(SELECT 1 FROM K_CLIENTES_LOGEADOS CL 
					JOIN K_NAVEGACION NAV ON CL.IP = NAV.IP)
		BEGIN

			UPDATE K_NAVEGACION SET Miembro = 
				(SELECT TOP 1 Nick 
				 FROM K_CLIENTES_LOGEADOS CL
					  JOIN K_NAVEGACION NAV ON CL.IP = NAV.IP)
			  WHERE IP = @ipactual
			  					
			UPDATE K_CLIENTES_LOGEADOS SET ZonaActual =
				(SELECT TOP 1 NAV.Pagina
				 FROM K_NAVEGACION NAV
					JOIN K_CLIENTES_LOGEADOS CL ON NAV.IP = CL.IP
				 WHERE NAV.FHVisita >= ALL (SELECT FHVisita FROM K_NAVEGACION))				
			  WHERE IP = @ipactual
				 
		END

		IF EXISTS(SELECT 1 FROM K_PROGRAMADORES_LOGEADOS PL 
					JOIN K_NAVEGACION NAV ON PL.IP = NAV.IP)
		BEGIN

			UPDATE K_NAVEGACION SET Miembro = 
				(SELECT TOP 1 Nick 
				 FROM K_PROGRAMADORES_LOGEADOS PL
					  JOIN K_NAVEGACION NAV ON PL.IP = NAV.IP)	
			  WHERE IP = @ipactual

					
			UPDATE K_PROGRAMADORES_LOGEADOS SET ZonaActual =
				(SELECT TOP 1 NAV.Pagina
				 FROM K_NAVEGACION NAV
					JOIN K_PROGRAMADORES_LOGEADOS PL ON NAV.IP = PL.IP
				 WHERE NAV.FHVisita >= ALL (SELECT FHVisita FROM K_NAVEGACION))				
			  WHERE IP = @ipactual				 
		END

		
		FETCH NEXT FROM IPs 
		INTO @ipactual
	
	END
	
	CLOSE IPS
	DEALLOCATE IPS

END
GO



CREATE TRIGGER IDENTIFICAR_PROGRAMADORES
ON K_PROGRAMADORES_LOGEADOS
AFTER INSERT
AS BEGIN

	DECLARE @tablaips TABLE (ip VARCHAR(20))
	DECLARE @ipactual VARCHAR(20)
	
	INSERT INTO @tablaips
		SELECT IP FROM INSERTED

	DECLARE IPs CURSOR FOR
		SELECT ip FROM @tablaips
		
	OPEN IPs
	
	FETCH NEXT FROM IPs 
	INTO @ipactual
	
	WHILE (@@FETCH_STATUS = 0)
	BEGIN

		IF EXISTS(SELECT 1 FROM K_PROGRAMADORES_LOGEADOS PL 
					JOIN K_NAVEGACION NAV ON PL.IP = NAV.IP)
		BEGIN

			UPDATE K_NAVEGACION SET Miembro = 
				(SELECT TOP 1 Nick 
				 FROM K_PROGRAMADORES_LOGEADOS PL
					  JOIN K_NAVEGACION NAV ON PL.IP = NAV.IP)	
			  WHERE IP = @ipactual
			  					  
					
			UPDATE K_PROGRAMADORES_LOGEADOS SET ZonaActual =
				(SELECT TOP 1 NAV.Pagina
				 FROM K_NAVEGACION NAV
					JOIN K_PROGRAMADORES_LOGEADOS PL ON NAV.IP = PL.IP
				 WHERE NAV.FHVisita >= ALL (SELECT FHVisita FROM K_NAVEGACION))				
			  WHERE IP = @ipactual				 
		END

		
		FETCH NEXT FROM IPs 
		INTO @ipactual
	
	END
	
	CLOSE IPS
	DEALLOCATE IPS

END
GO

CREATE TRIGGER IDENTIFICAR_CLIENTES
ON K_CLIENTES_LOGEADOS
AFTER INSERT
AS BEGIN

	DECLARE @tablaips TABLE (ip VARCHAR(20))
	DECLARE @ipactual VARCHAR(20)
	
	INSERT INTO @tablaips
		SELECT IP FROM INSERTED

	DECLARE IPs CURSOR FOR
		SELECT ip FROM @tablaips
		
	OPEN IPs
	
	FETCH NEXT FROM IPs 
	INTO @ipactual
	
	WHILE (@@FETCH_STATUS = 0)
	BEGIN

		IF EXISTS(SELECT 1 FROM K_CLIENTES_LOGEADOS CL 
					JOIN K_NAVEGACION NAV ON CL.IP = NAV.IP)
		BEGIN

			UPDATE K_NAVEGACION SET Miembro = 
				(SELECT TOP 1 Nick 
				 FROM K_CLIENTES_LOGEADOS CL
					  JOIN K_NAVEGACION NAV ON CL.IP = NAV.IP)
			  WHERE IP = @ipactual
			
					
			UPDATE K_CLIENTES_LOGEADOS SET ZonaActual =
				(SELECT TOP 1 NAV.Pagina
				 FROM K_NAVEGACION NAV
					JOIN K_CLIENTES_LOGEADOS CL ON NAV.IP = CL.IP
				 WHERE NAV.FHVisita >= ALL (SELECT FHVisita FROM K_NAVEGACION))				
			  WHERE IP = @ipactual
				 
		END
		
		FETCH NEXT FROM IPs 
		INTO @ipactual
	
	END
	
	CLOSE IPS
	DEALLOCATE IPS


END
GO


-- TRIGGER INSTEAD INSERT SOBRE
-- CLIENTES Y PROGRAMADORES LOGEADOS QUE COMPRUEBE SI ESTA 
-- Y SI ESTA LO BORRE ANTES DE INSERTARLO


CREATE TRIGGER INSERTAR_LOGEOS_CLI
ON K_CLIENTES_LOGEADOS
INSTEAD OF INSERT
AS BEGIN

	DECLARE @nick VARCHAR(20)
	
	SET @nick =
		(SELECT Nick FROM INSERTED)

	DELETE FROM K_CLIENTES_LOGEADOS
		WHERE Nick = @nick
		
	INSERT INTO K_CLIENTES_LOGEADOS
		SELECT * FROM INSERTED		

END
GO


CREATE TRIGGER INSERTAR_LOGEOS_PRO
ON K_PROGRAMADORES_LOGEADOS
INSTEAD OF INSERT
AS BEGIN

	DECLARE @nick VARCHAR(20)
	
	SET @nick =
		(SELECT Nick FROM INSERTED)

	DELETE FROM K_PROGRAMADORES_LOGEADOS
		WHERE Nick = @nick
		
	INSERT INTO K_PROGRAMADORES_LOGEADOS
		SELECT * FROM INSERTED		

END
GO

